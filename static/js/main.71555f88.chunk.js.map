{"version":3,"sources":["App.js","index.js"],"names":["App","useState","timer","setTimer","isActive","setIsActive","onWait","React","useCallback","useEffect","unsubscribe$","Subject","interval","pipe","takeUntil","subscribe","value","clicks$","fromEvent","document","querySelector","debounce$","debounceTime","buffer","map","item","length","filter","x","next","complete","onStart","onStop","onReset","className","Date","toISOString","slice","ButtonGroup","variant","size","color","Button","onClick","disabled","ReactDOM","render","StrictMode","getElementById"],"mappings":"uTAqFeA,MA3Ef,WACE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAASC,IAAMC,aAAY,WAC/BH,GAAY,KACX,IAEHI,qBAAU,WACR,IAAMC,EAAe,IAAIC,IACVC,YAAS,KAEjBC,KAAKC,YAAUJ,IAAeK,WAAU,YAC5B,IAAbX,GACFD,GAAS,SAACa,GAAD,OAAWA,EAAQ,UAIhC,IAAMC,EAAUC,YAAUC,SAASC,cAAc,gBAAiB,SAC5DC,EAAYJ,EAAQJ,KAAKS,YAAa,MAU5C,OARqBL,EAAQJ,KAC3BU,YAAOF,GACPG,aAAI,SAACC,GAAD,OAAUA,EAAKC,UACnBC,aAAO,SAACC,GAAD,OAAa,IAANA,MAGHb,WAAU,kBAAMT,OAEtB,WACLI,EAAamB,OACbnB,EAAaoB,cAEd,CAAC1B,EAAUE,IAEd,IAAMyB,EAAUxB,IAAMC,aAAY,WAChCH,GAAY,KACX,IACG2B,EAASzB,IAAMC,aAAY,WAC/BH,GAAY,GACZF,EAAS,KACR,IAEG8B,EAAU1B,IAAMC,aAAY,WAChCL,EAAS,KACR,IAEH,OACE,sBAAK+B,UAAU,kBAAf,UACE,sBAAMA,UAAU,aAAhB,SACG,IAAIC,KAAKjC,GAAOkC,cAAcC,MAAM,GAAI,MAE3C,eAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,KAAK,QACLC,MAAM,UACN,aAAW,iCAJb,UAME,cAACC,EAAA,EAAD,CACEC,QAASvC,EAAW4B,EAASD,EAC7BU,MAAOrC,EAAW,YAAc,UAFlC,SAIGA,EAAW,OAAS,UAEvB,cAACsC,EAAA,EAAD,CAAQC,QAASV,EAASW,UAAUxC,EAApC,mBAGA,cAACsC,EAAA,EAAD,CAAQR,UAAU,cAAcU,UAAUxC,EAA1C,yB,MCvERyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAAS6B,eAAe,W","file":"static/js/main.71555f88.chunk.js","sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\nimport { interval, Subject, fromEvent } from 'rxjs'\nimport { takeUntil, map, buffer, debounceTime, filter } from 'rxjs/operators'\n\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\n\nimport './App.css'\n\nfunction App() {\n  const [timer, setTimer] = useState(0)\n  const [isActive, setIsActive] = useState(false)\n\n  const onWait = React.useCallback(() => {\n    setIsActive(false)\n  }, [])\n\n  useEffect(() => {\n    const unsubscribe$ = new Subject()\n    const source = interval(1000)\n\n    source.pipe(takeUntil(unsubscribe$)).subscribe(() => {\n      if (isActive === true) {\n        setTimer((value) => value + 1000)\n      }\n    })\n\n    const clicks$ = fromEvent(document.querySelector('.wait-button'), 'click')\n    const debounce$ = clicks$.pipe(debounceTime(300))\n\n    const doubleClick$ = clicks$.pipe(\n      buffer(debounce$),\n      map((item) => item.length),\n      filter((x) => x === 2)\n    )\n\n    doubleClick$.subscribe(() => onWait())\n\n    return () => {\n      unsubscribe$.next()\n      unsubscribe$.complete()\n    }\n  }, [isActive, onWait])\n\n  const onStart = React.useCallback(() => {\n    setIsActive(true)\n  }, [])\n  const onStop = React.useCallback(() => {\n    setIsActive(false)\n    setTimer(0)\n  }, [])\n\n  const onReset = React.useCallback(() => {\n    setTimer(0)\n  }, [])\n\n  return (\n    <div className=\"timer-container\">\n      <span className=\"timer-text\">\n        {new Date(timer).toISOString().slice(11, 19)}\n      </span>\n      <ButtonGroup\n        variant=\"contained\"\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"contained primary button group\"\n      >\n        <Button\n          onClick={isActive ? onStop : onStart}\n          color={isActive ? 'secondary' : 'primary'}\n        >\n          {isActive ? 'Stop' : 'Start'}\n        </Button>\n        <Button onClick={onReset} disabled={isActive ? false : true}>\n          Reset\n        </Button>\n        <Button className=\"wait-button\" disabled={isActive ? false : true}>\n          Wait\n        </Button>\n      </ButtonGroup>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}